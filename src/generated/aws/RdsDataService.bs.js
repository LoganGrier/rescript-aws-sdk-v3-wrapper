// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Caml_option = require("rescript/lib/js/caml_option.js");
var Caml_exceptions = require("rescript/lib/js/caml_exceptions.js");

var FieldUnspecified = /* @__PURE__ */Caml_exceptions.create("RdsDataService-AwsSdkV3.Field.FieldUnspecified");

function classify(value) {
  var x = value.arrayValue;
  if (x !== undefined) {
    return {
            TAG: /* ArrayValue */0,
            _0: x
          };
  }
  var x$1 = value.blobValue;
  if (x$1 !== undefined) {
    return {
            TAG: /* BlobValue */1,
            _0: Caml_option.valFromOption(x$1)
          };
  }
  var x$2 = value.stringValue;
  if (x$2 !== undefined) {
    return {
            TAG: /* StringValue */2,
            _0: x$2
          };
  }
  var x$3 = value.doubleValue;
  if (x$3 !== undefined) {
    return {
            TAG: /* DoubleValue */3,
            _0: x$3
          };
  }
  var x$4 = value.longValue;
  if (x$4 !== undefined) {
    return {
            TAG: /* LongValue */4,
            _0: x$4
          };
  }
  var x$5 = value.booleanValue;
  if (x$5 !== undefined) {
    return {
            TAG: /* BooleanValue */5,
            _0: x$5
          };
  }
  var x$6 = value.isNull;
  if (x$6 !== undefined) {
    return {
            TAG: /* IsNull */6,
            _0: x$6
          };
  }
  throw {
        RE_EXN_ID: FieldUnspecified,
        Error: new Error()
      };
}

function make(value) {
  switch (value.TAG | 0) {
    case /* ArrayValue */0 :
        return {
                arrayValue: value._0,
                blobValue: undefined,
                stringValue: undefined,
                doubleValue: undefined,
                longValue: undefined,
                booleanValue: undefined,
                isNull: undefined
              };
    case /* BlobValue */1 :
        return {
                arrayValue: undefined,
                blobValue: Caml_option.some(value._0),
                stringValue: undefined,
                doubleValue: undefined,
                longValue: undefined,
                booleanValue: undefined,
                isNull: undefined
              };
    case /* StringValue */2 :
        return {
                arrayValue: undefined,
                blobValue: undefined,
                stringValue: value._0,
                doubleValue: undefined,
                longValue: undefined,
                booleanValue: undefined,
                isNull: undefined
              };
    case /* DoubleValue */3 :
        return {
                arrayValue: undefined,
                blobValue: undefined,
                stringValue: undefined,
                doubleValue: value._0,
                longValue: undefined,
                booleanValue: undefined,
                isNull: undefined
              };
    case /* LongValue */4 :
        return {
                arrayValue: undefined,
                blobValue: undefined,
                stringValue: undefined,
                doubleValue: undefined,
                longValue: value._0,
                booleanValue: undefined,
                isNull: undefined
              };
    case /* BooleanValue */5 :
        return {
                arrayValue: undefined,
                blobValue: undefined,
                stringValue: undefined,
                doubleValue: undefined,
                longValue: undefined,
                booleanValue: value._0,
                isNull: undefined
              };
    case /* IsNull */6 :
        return {
                arrayValue: undefined,
                blobValue: undefined,
                stringValue: undefined,
                doubleValue: undefined,
                longValue: undefined,
                booleanValue: undefined,
                isNull: value._0
              };
    
  }
}

var Field = {
  FieldUnspecified: FieldUnspecified,
  classify: classify,
  make: make
};

var RollbackTransaction = {};

var CommitTransaction = {};

var BeginTransaction = {};

var ExecuteStatement = {};

var BatchExecuteStatement = {};

var ExecuteSql = {};

exports.Field = Field;
exports.RollbackTransaction = RollbackTransaction;
exports.CommitTransaction = CommitTransaction;
exports.BeginTransaction = BeginTransaction;
exports.ExecuteStatement = ExecuteStatement;
exports.BatchExecuteStatement = BatchExecuteStatement;
exports.ExecuteSql = ExecuteSql;
/* No side effect */
