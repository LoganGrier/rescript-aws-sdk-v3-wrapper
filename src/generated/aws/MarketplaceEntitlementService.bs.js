// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Caml_exceptions = require("rescript/lib/js/caml_exceptions.js");

var EntitlementValueUnspecified = /* @__PURE__ */Caml_exceptions.create("MarketplaceEntitlementService-AwsSdkV3.EntitlementValue.EntitlementValueUnspecified");

function classify(value) {
  var x = value.StringValue;
  if (x !== undefined) {
    return {
            TAG: /* StringValue */0,
            _0: x
          };
  }
  var x$1 = value.BooleanValue;
  if (x$1 !== undefined) {
    return {
            TAG: /* BooleanValue */1,
            _0: x$1
          };
  }
  var x$2 = value.DoubleValue;
  if (x$2 !== undefined) {
    return {
            TAG: /* DoubleValue */2,
            _0: x$2
          };
  }
  var x$3 = value.IntegerValue;
  if (x$3 !== undefined) {
    return {
            TAG: /* IntegerValue */3,
            _0: x$3
          };
  }
  throw {
        RE_EXN_ID: EntitlementValueUnspecified,
        Error: new Error()
      };
}

function make(value) {
  switch (value.TAG | 0) {
    case /* StringValue */0 :
        return {
                StringValue: value._0,
                BooleanValue: undefined,
                DoubleValue: undefined,
                IntegerValue: undefined
              };
    case /* BooleanValue */1 :
        return {
                StringValue: undefined,
                BooleanValue: value._0,
                DoubleValue: undefined,
                IntegerValue: undefined
              };
    case /* DoubleValue */2 :
        return {
                StringValue: undefined,
                BooleanValue: undefined,
                DoubleValue: value._0,
                IntegerValue: undefined
              };
    case /* IntegerValue */3 :
        return {
                StringValue: undefined,
                BooleanValue: undefined,
                DoubleValue: undefined,
                IntegerValue: value._0
              };
    
  }
}

var EntitlementValue = {
  EntitlementValueUnspecified: EntitlementValueUnspecified,
  classify: classify,
  make: make
};

var GetEntitlements = {};

exports.EntitlementValue = EntitlementValue;
exports.GetEntitlements = GetEntitlements;
/* No side effect */
