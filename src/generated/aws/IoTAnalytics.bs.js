// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Caml_option = require("rescript/lib/js/caml_option.js");
var Caml_exceptions = require("rescript/lib/js/caml_exceptions.js");

var DatastoreStorageUnspecified = /* @__PURE__ */Caml_exceptions.create("IoTAnalytics-AwsSdkV3.DatastoreStorage.DatastoreStorageUnspecified");

function classify(value) {
  var x = value.customerManagedS3;
  if (x !== undefined) {
    return {
            TAG: /* CustomerManagedS3 */0,
            _0: x
          };
  }
  var x$1 = value.serviceManagedS3;
  if (x$1 !== undefined) {
    return {
            TAG: /* ServiceManagedS3 */1,
            _0: Caml_option.valFromOption(x$1)
          };
  }
  throw {
        RE_EXN_ID: DatastoreStorageUnspecified,
        Error: new Error()
      };
}

function make(value) {
  if (value.TAG === /* CustomerManagedS3 */0) {
    return {
            customerManagedS3: value._0,
            serviceManagedS3: undefined
          };
  } else {
    return {
            customerManagedS3: undefined,
            serviceManagedS3: Caml_option.some(value._0)
          };
  }
}

var DatastoreStorage = {
  DatastoreStorageUnspecified: DatastoreStorageUnspecified,
  classify: classify,
  make: make
};

var DeletePipeline = {};

var DeleteDatastore = {};

var DeleteDatasetContent = {};

var DeleteDataset = {};

var DeleteChannel = {};

var CreateDatasetContent = {};

var CancelPipelineReprocessing = {};

var UntagResource = {};

var SampleChannelData = {};

var PutLoggingOptions = {};

var DescribeLoggingOptions = {};

var UpdateChannel = {};

var TagResource = {};

var StartPipelineReprocessing = {};

var ListTagsForResource = {};

var GetDatasetContent = {};

var CreateChannel = {};

var BatchPutMessage = {};

var RunPipelineActivity = {};

var ListDatasetContents = {};

var DescribeChannel = {};

var UpdatePipeline = {};

var ListPipelines = {};

var ListDatastores = {};

var ListChannels = {};

var CreatePipeline = {};

var UpdateDatastore = {};

var ListDatasets = {};

var DescribePipeline = {};

var CreateDatastore = {};

var UpdateDataset = {};

var DescribeDatastore = {};

var CreateDataset = {};

var DescribeDataset = {};

exports.DatastoreStorage = DatastoreStorage;
exports.DeletePipeline = DeletePipeline;
exports.DeleteDatastore = DeleteDatastore;
exports.DeleteDatasetContent = DeleteDatasetContent;
exports.DeleteDataset = DeleteDataset;
exports.DeleteChannel = DeleteChannel;
exports.CreateDatasetContent = CreateDatasetContent;
exports.CancelPipelineReprocessing = CancelPipelineReprocessing;
exports.UntagResource = UntagResource;
exports.SampleChannelData = SampleChannelData;
exports.PutLoggingOptions = PutLoggingOptions;
exports.DescribeLoggingOptions = DescribeLoggingOptions;
exports.UpdateChannel = UpdateChannel;
exports.TagResource = TagResource;
exports.StartPipelineReprocessing = StartPipelineReprocessing;
exports.ListTagsForResource = ListTagsForResource;
exports.GetDatasetContent = GetDatasetContent;
exports.CreateChannel = CreateChannel;
exports.BatchPutMessage = BatchPutMessage;
exports.RunPipelineActivity = RunPipelineActivity;
exports.ListDatasetContents = ListDatasetContents;
exports.DescribeChannel = DescribeChannel;
exports.UpdatePipeline = UpdatePipeline;
exports.ListPipelines = ListPipelines;
exports.ListDatastores = ListDatastores;
exports.ListChannels = ListChannels;
exports.CreatePipeline = CreatePipeline;
exports.UpdateDatastore = UpdateDatastore;
exports.ListDatasets = ListDatasets;
exports.DescribePipeline = DescribePipeline;
exports.CreateDatastore = CreateDatastore;
exports.UpdateDataset = UpdateDataset;
exports.DescribeDatastore = DescribeDatastore;
exports.CreateDataset = CreateDataset;
exports.DescribeDataset = DescribeDataset;
/* No side effect */
