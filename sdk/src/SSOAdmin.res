type responseMetadata = {
  httpStatusCode: option<float>,
  requestId: option<string>,
  extendedRequestId: option<string>,
  cfId: option<string>,
  attempts: option<int>,
  totalRetryDelay: option<int>,
}
type awsServiceClient
@module("@aws-sdk/client-sso") @new
external createClient: unit => awsServiceClient = "SSOAdminClient"
type baseString = string
type baseBoolean = bool
type baseInteger = int
type baseTimestamp = Js.Date.t
type baseLong = float
type validationExceptionMessage = string
type uuid = string
type token = string
type throttlingExceptionMessage = string
type targetType = [@as("AWS_ACCOUNT") #AWS_ACCOUNT]
type targetId = string
type tagValue = string
type tagKey = string
type statusValues = [
  | @as("SUCCEEDED") #SUCCEEDED
  | @as("FAILED") #FAILED
  | @as("IN_PROGRESS") #IN_PROGRESS
]
type serviceQuotaExceededMessage = string
type resourceNotFoundMessage = string
type relayState = string
type reason = string
type provisioningStatus = [
  | @as("LATEST_PERMISSION_SET_NOT_PROVISIONED") #LATEST_PERMISSION_SET_NOT_PROVISIONED
  | @as("LATEST_PERMISSION_SET_PROVISIONED") #LATEST_PERMISSION_SET_PROVISIONED
]
type provisionTargetType = [
  | @as("ALL_PROVISIONED_ACCOUNTS") #ALL_PROVISIONED_ACCOUNTS
  | @as("AWS_ACCOUNT") #AWS_ACCOUNT
]
type principalType = [@as("GROUP") #GROUP | @as("USER") #USER]
type principalId = string
type permissionSetPolicyDocument = string
type permissionSetName = string
type permissionSetDescription = string
type permissionSetArn = string
type name = string
type maxResults = int
type managedPolicyArn = string
type internalFailureMessage = string
type instanceArn = string
type instanceAccessControlAttributeConfigurationStatusReason = string
type instanceAccessControlAttributeConfigurationStatus = [
  | @as("CREATION_FAILED") #CREATION_FAILED
  | @as("CREATION_IN_PROGRESS") #CREATION_IN_PROGRESS
  | @as("ENABLED") #ENABLED
]
type id = string
type generalArn = string
type duration = string
type date = Js.Date.t
type conflictExceptionMessage = string
type accountId = string
type accessDeniedExceptionMessage = string
type accessControlAttributeValueSource = string
type accessControlAttributeKey = string
type tagKeyList = array<tagKey>
@ocaml.doc("<p>A set of key-value pairs that are used to manage the resource. Tags can only be applied to
      permission sets and cannot be applied to corresponding roles that Amazon Web Services SSO creates in Amazon Web Services
      accounts.</p>")
type tag = {
  @ocaml.doc("<p>The value of the tag.</p>") @as("Value") value: option<tagValue>,
  @ocaml.doc("<p>The key for the tag.</p>") @as("Key") key: option<tagKey>,
}
@ocaml.doc("<p>Provides information about the permission set provisioning status.</p>")
type permissionSetProvisioningStatusMetadata = {
  @ocaml.doc("<p>The date that the permission set was created.</p>") @as("CreatedDate")
  createdDate: option<date>,
  @ocaml.doc("<p>The identifier for tracking the request operation that is generated by the universally
      unique identifier (UUID) workflow.</p>")
  @as("RequestId")
  requestId: option<uuid>,
  @ocaml.doc("<p>The status of the permission set provisioning process.</p>") @as("Status")
  status: option<statusValues>,
}
@ocaml.doc("<p>A structure that is used to provide the status of the provisioning operation for a
      specified permission set.</p>")
type permissionSetProvisioningStatus = {
  @ocaml.doc("<p>The date that the permission set was created.</p>") @as("CreatedDate")
  createdDate: option<date>,
  @ocaml.doc(
    "<p>The message that contains an error or exception in case of an operation failure.</p>"
  )
  @as("FailureReason")
  failureReason: option<reason>,
  @ocaml.doc("<p>The ARN of the permission set that is being provisioned. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
  @as("PermissionSetArn")
  permissionSetArn: option<permissionSetArn>,
  @ocaml.doc(
    "<p>The identifier of the Amazon Web Services account from which to list the assignments.</p>"
  )
  @as("AccountId")
  accountId: option<accountId>,
  @ocaml.doc("<p>The identifier for tracking the request operation that is generated by the universally
      unique identifier (UUID) workflow.</p>")
  @as("RequestId")
  requestId: option<uuid>,
  @ocaml.doc("<p>The status of the permission set provisioning process.</p>") @as("Status")
  status: option<statusValues>,
}
type permissionSetList = array<permissionSetArn>
@ocaml.doc("<p>An entity that contains IAM policies.</p>")
type permissionSet = {
  @ocaml.doc("<p>Used to redirect users within the application during the federation authentication
      process.</p>")
  @as("RelayState")
  relayState: option<relayState>,
  @ocaml.doc("<p>The length of time that the application user sessions are valid for in the ISO-8601
      standard.</p>")
  @as("SessionDuration")
  sessionDuration: option<duration>,
  @ocaml.doc("<p>The date that the permission set was created.</p>") @as("CreatedDate")
  createdDate: option<date>,
  @ocaml.doc("<p>The description of the <a>PermissionSet</a>.</p>") @as("Description")
  description: option<permissionSetDescription>,
  @ocaml.doc("<p>The ARN of the permission set. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
  @as("PermissionSetArn")
  permissionSetArn: option<permissionSetArn>,
  @ocaml.doc("<p>The name of the permission set.</p>") @as("Name") name: option<permissionSetName>,
}
@ocaml.doc("<p>Filters he operation status list based on the passed attribute value.</p>")
type operationStatusFilter = {
  @ocaml.doc("<p>Filters the list operations result based on the status attribute.</p>")
  @as("Status")
  status: option<statusValues>,
}
@ocaml.doc("<p>Provides information about the SSO instance.</p>")
type instanceMetadata = {
  @ocaml.doc("<p>The identifier of the identity store that is connected to the SSO instance.</p>")
  @as("IdentityStoreId")
  identityStoreId: option<id>,
  @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
  @as("InstanceArn")
  instanceArn: option<instanceArn>,
}
@ocaml.doc("<p>A structure that stores the details of the IAM managed policy.</p>")
type attachedManagedPolicy = {
  @ocaml.doc("<p>The ARN of the IAM managed policy. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
  @as("Arn")
  arn: option<managedPolicyArn>,
  @ocaml.doc("<p>The name of the IAM managed policy.</p>") @as("Name") name: option<name>,
}
type accountList = array<accountId>
@ocaml.doc("<p>Provides information about the <a>AccountAssignment</a> creation
      request.</p>")
type accountAssignmentOperationStatusMetadata = {
  @ocaml.doc("<p>The date that the permission set was created.</p>") @as("CreatedDate")
  createdDate: option<date>,
  @ocaml.doc("<p>The identifier for tracking the request operation that is generated by the universally
      unique identifier (UUID) workflow.</p>")
  @as("RequestId")
  requestId: option<uuid>,
  @ocaml.doc("<p>The status of the permission set provisioning process.</p>") @as("Status")
  status: option<statusValues>,
}
@ocaml.doc("<p>The status of the creation or deletion operation of an assignment that a principal needs
      to access an account.</p>")
type accountAssignmentOperationStatus = {
  @ocaml.doc("<p>The date that the permission set was created.</p>") @as("CreatedDate")
  createdDate: option<date>,
  @ocaml.doc(
    "<p>An identifier for an object in Amazon Web Services SSO, such as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6). For more information about PrincipalIds in Amazon Web Services SSO, see the <a href=\"/singlesignon/latest/IdentityStoreAPIReference/welcome.html\">Amazon Web Services SSO Identity Store API Reference</a>.</p>"
  )
  @as("PrincipalId")
  principalId: option<principalId>,
  @ocaml.doc("<p>The entity type for which the assignment will be created.</p>")
  @as("PrincipalType")
  principalType: option<principalType>,
  @ocaml.doc("<p>The ARN of the permission set. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
  @as("PermissionSetArn")
  permissionSetArn: option<permissionSetArn>,
  @ocaml.doc("<p>The entity type for which the assignment will be created.</p>") @as("TargetType")
  targetType: option<targetType>,
  @ocaml.doc(
    "<p>TargetID is an Amazon Web Services account identifier, typically a 10-12 digit string (For example, 123456789012).</p>"
  )
  @as("TargetId")
  targetId: option<targetId>,
  @ocaml.doc(
    "<p>The message that contains an error or exception in case of an operation failure.</p>"
  )
  @as("FailureReason")
  failureReason: option<reason>,
  @ocaml.doc("<p>The identifier for tracking the request operation that is generated by the universally
      unique identifier (UUID) workflow.</p>")
  @as("RequestId")
  requestId: option<uuid>,
  @ocaml.doc("<p>The status of the permission set provisioning process.</p>") @as("Status")
  status: option<statusValues>,
}
@ocaml.doc("<p>The assignment that indicates a principal's limited access to a specified Amazon Web Services account
      with a specified permission set.</p>
         <note>
            <p>The term <i>principal</i> here refers to a user or group that is defined
        in Amazon Web Services SSO.</p>
         </note>")
type accountAssignment = {
  @ocaml.doc(
    "<p>An identifier for an object in Amazon Web Services SSO, such as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6). For more information about PrincipalIds in Amazon Web Services SSO, see the <a href=\"/singlesignon/latest/IdentityStoreAPIReference/welcome.html\">Amazon Web Services SSO Identity Store API Reference</a>.</p>"
  )
  @as("PrincipalId")
  principalId: option<principalId>,
  @ocaml.doc("<p>The entity type for which the assignment will be created.</p>")
  @as("PrincipalType")
  principalType: option<principalType>,
  @ocaml.doc("<p>The ARN of the permission set. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
  @as("PermissionSetArn")
  permissionSetArn: option<permissionSetArn>,
  @ocaml.doc("<p>The identifier of the Amazon Web Services account.</p>") @as("AccountId")
  accountId: option<accountId>,
}
type accessControlAttributeValueSourceList = array<accessControlAttributeValueSource>
type tagList_ = array<tag>
type permissionSetProvisioningStatusList = array<permissionSetProvisioningStatusMetadata>
type instanceList = array<instanceMetadata>
type attachedManagedPolicyList = array<attachedManagedPolicy>
type accountAssignmentOperationStatusList = array<accountAssignmentOperationStatusMetadata>
type accountAssignmentList = array<accountAssignment>
@ocaml.doc("<p>The value used for mapping a specified attribute to an identity source.</p>")
type accessControlAttributeValue = {
  @ocaml.doc(
    "<p>The identity source to use when mapping a specified attribute to Amazon Web Services SSO.</p>"
  )
  @as("Source")
  source: accessControlAttributeValueSourceList,
}
@ocaml.doc("<p>These are Amazon Web Services SSO identity store attributes that you can configure for use in
      attributes-based access control (ABAC). You can create permissions policies that determine who
      can access your Amazon Web Services resources based upon the configured attribute values. When you enable
      ABAC and specify <code>AccessControlAttributes</code>, Amazon Web Services SSO passes the attribute values
      of the authenticated user into IAM for use in policy evaluation.</p>")
type accessControlAttribute = {
  @ocaml.doc("<p>The value used for mapping a specified attribute to an identity source.</p>")
  @as("Value")
  value: accessControlAttributeValue,
  @ocaml.doc("<p>The name of the attribute associated with your identities in your identity source. This is
      used to map a specified attribute in your identity source with an attribute in Amazon Web Services
      SSO.</p>")
  @as("Key")
  key: accessControlAttributeKey,
}
type accessControlAttributeList = array<accessControlAttribute>
@ocaml.doc("<p>Specifies the attributes to add to your attribute-based access control (ABAC)
      configuration.</p>")
type instanceAccessControlAttributeConfiguration = {
  @ocaml.doc("<p>Lists the attributes that are configured for ABAC in the specified Amazon Web Services SSO
      instance.</p>")
  @as("AccessControlAttributes")
  accessControlAttributes: accessControlAttributeList,
}
@ocaml.doc("<p>Amazon Web Services Single Sign On (SSO) is a cloud SSO service that makes it easy to centrally manage SSO
      access to multiple Amazon Web Services accounts and business applications. This guide provides information on
      SSO operations which could be used for access management of Amazon Web Services accounts. For information about
      Amazon Web Services SSO features, see the <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html\">Amazon Web Services Single Sign-On User Guide</a>.</p>
         <p>Many operations in the SSO APIs rely on identifiers for users and groups, known as
      principals. For more information about how to work with principals and principal IDs in Amazon Web Services SSO,
      see the <a href=\"https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/welcome.html\">Amazon Web Services SSO Identity Store API
        Reference</a>.</p>")
module UpdatePermissionSet = {
  type t
  type request = {
    @ocaml.doc("<p>Used to redirect users within the application during the federation authentication
      process.</p>")
    @as("RelayState")
    relayState: option<relayState>,
    @ocaml.doc("<p>The length of time that the application user sessions are valid for in the ISO-8601
      standard.</p>")
    @as("SessionDuration")
    sessionDuration: option<duration>,
    @ocaml.doc("<p>The description of the <a>PermissionSet</a>.</p>") @as("Description")
    description: option<permissionSetDescription>,
    @ocaml.doc("<p>The ARN of the permission set.</p>") @as("PermissionSetArn")
    permissionSetArn: permissionSetArn,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {.}
  @module("@aws-sdk/client-sso") @new external new: request => t = "UpdatePermissionSetCommand"
  let make = (
    ~permissionSetArn,
    ~instanceArn,
    ~relayState=?,
    ~sessionDuration=?,
    ~description=?,
    (),
  ) =>
    new({
      relayState: relayState,
      sessionDuration: sessionDuration,
      description: description,
      permissionSetArn: permissionSetArn,
      instanceArn: instanceArn,
    })
  @send external send: (awsServiceClient, t) => Js.Promise.t<unit> = "send"
}

module PutInlinePolicyToPermissionSet = {
  type t
  type request = {
    @ocaml.doc("<p>The IAM inline policy to attach to a <a>PermissionSet</a>.</p>")
    @as("InlinePolicy")
    inlinePolicy: permissionSetPolicyDocument,
    @ocaml.doc("<p>The ARN of the permission set.</p>") @as("PermissionSetArn")
    permissionSetArn: permissionSetArn,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {.}
  @module("@aws-sdk/client-sso") @new
  external new: request => t = "PutInlinePolicyToPermissionSetCommand"
  let make = (~inlinePolicy, ~permissionSetArn, ~instanceArn, ()) =>
    new({inlinePolicy: inlinePolicy, permissionSetArn: permissionSetArn, instanceArn: instanceArn})
  @send external send: (awsServiceClient, t) => Js.Promise.t<unit> = "send"
}

module GetInlinePolicyForPermissionSet = {
  type t
  type request = {
    @ocaml.doc("<p>The ARN of the permission set.</p>") @as("PermissionSetArn")
    permissionSetArn: permissionSetArn,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {
    @ocaml.doc("<p>The IAM inline policy that is attached to the permission set.</p>")
    @as("InlinePolicy")
    inlinePolicy: option<permissionSetPolicyDocument>,
  }
  @module("@aws-sdk/client-sso") @new
  external new: request => t = "GetInlinePolicyForPermissionSetCommand"
  let make = (~permissionSetArn, ~instanceArn, ()) =>
    new({permissionSetArn: permissionSetArn, instanceArn: instanceArn})
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module DetachManagedPolicyFromPermissionSet = {
  type t
  type request = {
    @ocaml.doc("<p>The IAM managed policy ARN to be attached to a permission set.</p>")
    @as("ManagedPolicyArn")
    managedPolicyArn: managedPolicyArn,
    @ocaml.doc("<p>The ARN of the <a>PermissionSet</a> from which the policy should be
      detached.</p>")
    @as("PermissionSetArn")
    permissionSetArn: permissionSetArn,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {.}
  @module("@aws-sdk/client-sso") @new
  external new: request => t = "DetachManagedPolicyFromPermissionSetCommand"
  let make = (~managedPolicyArn, ~permissionSetArn, ~instanceArn, ()) =>
    new({
      managedPolicyArn: managedPolicyArn,
      permissionSetArn: permissionSetArn,
      instanceArn: instanceArn,
    })
  @send external send: (awsServiceClient, t) => Js.Promise.t<unit> = "send"
}

module DeletePermissionSet = {
  type t
  type request = {
    @ocaml.doc("<p>The ARN of the permission set that should be deleted.</p>")
    @as("PermissionSetArn")
    permissionSetArn: permissionSetArn,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {.}
  @module("@aws-sdk/client-sso") @new external new: request => t = "DeletePermissionSetCommand"
  let make = (~permissionSetArn, ~instanceArn, ()) =>
    new({permissionSetArn: permissionSetArn, instanceArn: instanceArn})
  @send external send: (awsServiceClient, t) => Js.Promise.t<unit> = "send"
}

module DeleteInstanceAccessControlAttributeConfiguration = {
  type t
  type request = {
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {.}
  @module("@aws-sdk/client-sso") @new
  external new: request => t = "DeleteInstanceAccessControlAttributeConfigurationCommand"
  let make = (~instanceArn, ()) => new({instanceArn: instanceArn})
  @send external send: (awsServiceClient, t) => Js.Promise.t<unit> = "send"
}

module DeleteInlinePolicyFromPermissionSet = {
  type t
  type request = {
    @ocaml.doc("<p>The ARN of the permission set that will be used to remove access.</p>")
    @as("PermissionSetArn")
    permissionSetArn: permissionSetArn,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {.}
  @module("@aws-sdk/client-sso") @new
  external new: request => t = "DeleteInlinePolicyFromPermissionSetCommand"
  let make = (~permissionSetArn, ~instanceArn, ()) =>
    new({permissionSetArn: permissionSetArn, instanceArn: instanceArn})
  @send external send: (awsServiceClient, t) => Js.Promise.t<unit> = "send"
}

module AttachManagedPolicyToPermissionSet = {
  type t
  type request = {
    @ocaml.doc("<p>The IAM managed policy ARN to be attached to a permission set.</p>")
    @as("ManagedPolicyArn")
    managedPolicyArn: managedPolicyArn,
    @ocaml.doc("<p>The ARN of the <a>PermissionSet</a> that the managed policy should be attached
      to.</p>")
    @as("PermissionSetArn")
    permissionSetArn: permissionSetArn,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {.}
  @module("@aws-sdk/client-sso") @new
  external new: request => t = "AttachManagedPolicyToPermissionSetCommand"
  let make = (~managedPolicyArn, ~permissionSetArn, ~instanceArn, ()) =>
    new({
      managedPolicyArn: managedPolicyArn,
      permissionSetArn: permissionSetArn,
      instanceArn: instanceArn,
    })
  @send external send: (awsServiceClient, t) => Js.Promise.t<unit> = "send"
}

module UntagResource = {
  type t
  type request = {
    @ocaml.doc("<p>The keys of tags that are attached to the resource.</p>") @as("TagKeys")
    tagKeys: tagKeyList,
    @ocaml.doc("<p>The ARN of the resource with the tags to be listed.</p>") @as("ResourceArn")
    resourceArn: generalArn,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {.}
  @module("@aws-sdk/client-sso") @new external new: request => t = "UntagResourceCommand"
  let make = (~tagKeys, ~resourceArn, ~instanceArn, ()) =>
    new({tagKeys: tagKeys, resourceArn: resourceArn, instanceArn: instanceArn})
  @send external send: (awsServiceClient, t) => Js.Promise.t<unit> = "send"
}

module ProvisionPermissionSet = {
  type t
  type request = {
    @ocaml.doc("<p>The entity type for which the assignment will be created.</p>") @as("TargetType")
    targetType: provisionTargetType,
    @ocaml.doc(
      "<p>TargetID is an Amazon Web Services account identifier, typically a 10-12 digit string (For example, 123456789012).</p>"
    )
    @as("TargetId")
    targetId: option<targetId>,
    @ocaml.doc("<p>The ARN of the permission set.</p>") @as("PermissionSetArn")
    permissionSetArn: permissionSetArn,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {
    @ocaml.doc("<p>The status object for the permission set provisioning operation.</p>")
    @as("PermissionSetProvisioningStatus")
    permissionSetProvisioningStatus: option<permissionSetProvisioningStatus>,
  }
  @module("@aws-sdk/client-sso") @new external new: request => t = "ProvisionPermissionSetCommand"
  let make = (~targetType, ~permissionSetArn, ~instanceArn, ~targetId=?, ()) =>
    new({
      targetType: targetType,
      targetId: targetId,
      permissionSetArn: permissionSetArn,
      instanceArn: instanceArn,
    })
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module ListPermissionSetsProvisionedToAccount = {
  type t
  type request = {
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
    @ocaml.doc("<p>The maximum number of results to display for the assignment.</p>")
    @as("MaxResults")
    maxResults: option<maxResults>,
    @ocaml.doc("<p>The status object for the permission set provisioning operation.</p>")
    @as("ProvisioningStatus")
    provisioningStatus: option<provisioningStatus>,
    @ocaml.doc(
      "<p>The identifier of the Amazon Web Services account from which to list the assignments.</p>"
    )
    @as("AccountId")
    accountId: accountId,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {
    @ocaml.doc("<p>Defines the level of access that an Amazon Web Services account has.</p>")
    @as("PermissionSets")
    permissionSets: option<permissionSetList>,
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
  }
  @module("@aws-sdk/client-sso") @new
  external new: request => t = "ListPermissionSetsProvisionedToAccountCommand"
  let make = (~accountId, ~instanceArn, ~nextToken=?, ~maxResults=?, ~provisioningStatus=?, ()) =>
    new({
      nextToken: nextToken,
      maxResults: maxResults,
      provisioningStatus: provisioningStatus,
      accountId: accountId,
      instanceArn: instanceArn,
    })
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module ListPermissionSets = {
  type t
  type request = {
    @ocaml.doc("<p>The maximum number of results to display for the assignment.</p>")
    @as("MaxResults")
    maxResults: option<maxResults>,
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
    @ocaml.doc("<p>Defines the level of access on an Amazon Web Services account.</p>")
    @as("PermissionSets")
    permissionSets: option<permissionSetList>,
  }
  @module("@aws-sdk/client-sso") @new external new: request => t = "ListPermissionSetsCommand"
  let make = (~instanceArn, ~maxResults=?, ~nextToken=?, ()) =>
    new({maxResults: maxResults, nextToken: nextToken, instanceArn: instanceArn})
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module ListAccountsForProvisionedPermissionSet = {
  type t
  type request = {
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
    @ocaml.doc("<p>The maximum number of results to display for the <a>PermissionSet</a>.</p>")
    @as("MaxResults")
    maxResults: option<maxResults>,
    @ocaml.doc("<p>The permission set provisioning status for an Amazon Web Services account.</p>")
    @as("ProvisioningStatus")
    provisioningStatus: option<provisioningStatus>,
    @ocaml.doc("<p>The ARN of the <a>PermissionSet</a> from which the associated Amazon Web Services accounts
      will be listed.</p>")
    @as("PermissionSetArn")
    permissionSetArn: permissionSetArn,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
    @ocaml.doc("<p>The list of Amazon Web Services <code>AccountIds</code>.</p>") @as("AccountIds")
    accountIds: option<accountList>,
  }
  @module("@aws-sdk/client-sso") @new
  external new: request => t = "ListAccountsForProvisionedPermissionSetCommand"
  let make = (
    ~permissionSetArn,
    ~instanceArn,
    ~nextToken=?,
    ~maxResults=?,
    ~provisioningStatus=?,
    (),
  ) =>
    new({
      nextToken: nextToken,
      maxResults: maxResults,
      provisioningStatus: provisioningStatus,
      permissionSetArn: permissionSetArn,
      instanceArn: instanceArn,
    })
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module DescribePermissionSetProvisioningStatus = {
  type t
  type request = {
    @ocaml.doc("<p>The identifier that is provided by the <a>ProvisionPermissionSet</a> call to
      retrieve the current status of the provisioning workflow.</p>")
    @as("ProvisionPermissionSetRequestId")
    provisionPermissionSetRequestId: uuid,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {
    @ocaml.doc("<p>The status object for the permission set provisioning operation.</p>")
    @as("PermissionSetProvisioningStatus")
    permissionSetProvisioningStatus: option<permissionSetProvisioningStatus>,
  }
  @module("@aws-sdk/client-sso") @new
  external new: request => t = "DescribePermissionSetProvisioningStatusCommand"
  let make = (~provisionPermissionSetRequestId, ~instanceArn, ()) =>
    new({
      provisionPermissionSetRequestId: provisionPermissionSetRequestId,
      instanceArn: instanceArn,
    })
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module DescribePermissionSet = {
  type t
  type request = {
    @ocaml.doc("<p>The ARN of the permission set.</p>") @as("PermissionSetArn")
    permissionSetArn: permissionSetArn,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {
    @ocaml.doc("<p>Describes the level of access on an Amazon Web Services account.</p>")
    @as("PermissionSet")
    permissionSet: option<permissionSet>,
  }
  @module("@aws-sdk/client-sso") @new external new: request => t = "DescribePermissionSetCommand"
  let make = (~permissionSetArn, ~instanceArn, ()) =>
    new({permissionSetArn: permissionSetArn, instanceArn: instanceArn})
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module DescribeAccountAssignmentDeletionStatus = {
  type t
  type request = {
    @ocaml.doc("<p>The identifier that is used to track the request operation progress.</p>")
    @as("AccountAssignmentDeletionRequestId")
    accountAssignmentDeletionRequestId: uuid,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {
    @ocaml.doc("<p>The status object for the account assignment deletion operation.</p>")
    @as("AccountAssignmentDeletionStatus")
    accountAssignmentDeletionStatus: option<accountAssignmentOperationStatus>,
  }
  @module("@aws-sdk/client-sso") @new
  external new: request => t = "DescribeAccountAssignmentDeletionStatusCommand"
  let make = (~accountAssignmentDeletionRequestId, ~instanceArn, ()) =>
    new({
      accountAssignmentDeletionRequestId: accountAssignmentDeletionRequestId,
      instanceArn: instanceArn,
    })
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module DescribeAccountAssignmentCreationStatus = {
  type t
  type request = {
    @ocaml.doc("<p>The identifier that is used to track the request operation progress.</p>")
    @as("AccountAssignmentCreationRequestId")
    accountAssignmentCreationRequestId: uuid,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {
    @ocaml.doc("<p>The status object for the account assignment creation operation.</p>")
    @as("AccountAssignmentCreationStatus")
    accountAssignmentCreationStatus: option<accountAssignmentOperationStatus>,
  }
  @module("@aws-sdk/client-sso") @new
  external new: request => t = "DescribeAccountAssignmentCreationStatusCommand"
  let make = (~accountAssignmentCreationRequestId, ~instanceArn, ()) =>
    new({
      accountAssignmentCreationRequestId: accountAssignmentCreationRequestId,
      instanceArn: instanceArn,
    })
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module DeleteAccountAssignment = {
  type t
  type request = {
    @ocaml.doc(
      "<p>An identifier for an object in Amazon Web Services SSO, such as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6). For more information about PrincipalIds in Amazon Web Services SSO, see the <a href=\"/singlesignon/latest/IdentityStoreAPIReference/welcome.html\">Amazon Web Services SSO Identity Store API Reference</a>.</p>"
    )
    @as("PrincipalId")
    principalId: principalId,
    @ocaml.doc("<p>The entity type for which the assignment will be deleted.</p>")
    @as("PrincipalType")
    principalType: principalType,
    @ocaml.doc("<p>The ARN of the permission set that will be used to remove access.</p>")
    @as("PermissionSetArn")
    permissionSetArn: permissionSetArn,
    @ocaml.doc("<p>The entity type for which the assignment will be deleted.</p>") @as("TargetType")
    targetType: targetType,
    @ocaml.doc(
      "<p>TargetID is an Amazon Web Services account identifier, typically a 10-12 digit string (For example, 123456789012).</p>"
    )
    @as("TargetId")
    targetId: targetId,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {
    @ocaml.doc("<p>The status object for the account assignment deletion operation.</p>")
    @as("AccountAssignmentDeletionStatus")
    accountAssignmentDeletionStatus: option<accountAssignmentOperationStatus>,
  }
  @module("@aws-sdk/client-sso") @new external new: request => t = "DeleteAccountAssignmentCommand"
  let make = (
    ~principalId,
    ~principalType,
    ~permissionSetArn,
    ~targetType,
    ~targetId,
    ~instanceArn,
    (),
  ) =>
    new({
      principalId: principalId,
      principalType: principalType,
      permissionSetArn: permissionSetArn,
      targetType: targetType,
      targetId: targetId,
      instanceArn: instanceArn,
    })
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module CreateAccountAssignment = {
  type t
  type request = {
    @ocaml.doc(
      "<p>An identifier for an object in Amazon Web Services SSO, such as a user or group. PrincipalIds are GUIDs (For example, f81d4fae-7dec-11d0-a765-00a0c91e6bf6). For more information about PrincipalIds in Amazon Web Services SSO, see the <a href=\"/singlesignon/latest/IdentityStoreAPIReference/welcome.html\">Amazon Web Services SSO Identity Store API Reference</a>.</p>"
    )
    @as("PrincipalId")
    principalId: principalId,
    @ocaml.doc("<p>The entity type for which the assignment will be created.</p>")
    @as("PrincipalType")
    principalType: principalType,
    @ocaml.doc("<p>The ARN of the permission set that the admin wants to grant the principal access
      to.</p>")
    @as("PermissionSetArn")
    permissionSetArn: permissionSetArn,
    @ocaml.doc("<p>The entity type for which the assignment will be created.</p>") @as("TargetType")
    targetType: targetType,
    @ocaml.doc(
      "<p>TargetID is an Amazon Web Services account identifier, typically a 10-12 digit string (For example, 123456789012).</p>"
    )
    @as("TargetId")
    targetId: targetId,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {
    @ocaml.doc("<p>The status object for the account assignment creation operation.</p>")
    @as("AccountAssignmentCreationStatus")
    accountAssignmentCreationStatus: option<accountAssignmentOperationStatus>,
  }
  @module("@aws-sdk/client-sso") @new external new: request => t = "CreateAccountAssignmentCommand"
  let make = (
    ~principalId,
    ~principalType,
    ~permissionSetArn,
    ~targetType,
    ~targetId,
    ~instanceArn,
    (),
  ) =>
    new({
      principalId: principalId,
      principalType: principalType,
      permissionSetArn: permissionSetArn,
      targetType: targetType,
      targetId: targetId,
      instanceArn: instanceArn,
    })
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module TagResource = {
  type t
  type request = {
    @ocaml.doc("<p>A set of key-value pairs that are used to manage the resource.</p>") @as("Tags")
    tags: tagList_,
    @ocaml.doc("<p>The ARN of the resource with the tags to be listed.</p>") @as("ResourceArn")
    resourceArn: generalArn,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {.}
  @module("@aws-sdk/client-sso") @new external new: request => t = "TagResourceCommand"
  let make = (~tags, ~resourceArn, ~instanceArn, ()) =>
    new({tags: tags, resourceArn: resourceArn, instanceArn: instanceArn})
  @send external send: (awsServiceClient, t) => Js.Promise.t<unit> = "send"
}

module ListTagsForResource = {
  type t
  type request = {
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
    @ocaml.doc("<p>The ARN of the resource with the tags to be listed.</p>") @as("ResourceArn")
    resourceArn: generalArn,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
    @ocaml.doc("<p>A set of key-value pairs that are used to manage the resource.</p>") @as("Tags")
    tags: option<tagList_>,
  }
  @module("@aws-sdk/client-sso") @new external new: request => t = "ListTagsForResourceCommand"
  let make = (~resourceArn, ~instanceArn, ~nextToken=?, ()) =>
    new({nextToken: nextToken, resourceArn: resourceArn, instanceArn: instanceArn})
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module ListPermissionSetProvisioningStatus = {
  type t
  type request = {
    @ocaml.doc("<p>Filters results based on the passed attribute value.</p>") @as("Filter")
    filter: option<operationStatusFilter>,
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
    @ocaml.doc("<p>The maximum number of results to display for the assignment.</p>")
    @as("MaxResults")
    maxResults: option<maxResults>,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
    @ocaml.doc("<p>The status object for the permission set provisioning operation.</p>")
    @as("PermissionSetsProvisioningStatus")
    permissionSetsProvisioningStatus: option<permissionSetProvisioningStatusList>,
  }
  @module("@aws-sdk/client-sso") @new
  external new: request => t = "ListPermissionSetProvisioningStatusCommand"
  let make = (~instanceArn, ~filter=?, ~nextToken=?, ~maxResults=?, ()) =>
    new({filter: filter, nextToken: nextToken, maxResults: maxResults, instanceArn: instanceArn})
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module ListManagedPoliciesInPermissionSet = {
  type t
  type request = {
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
    @ocaml.doc("<p>The maximum number of results to display for the <a>PermissionSet</a>.</p>")
    @as("MaxResults")
    maxResults: option<maxResults>,
    @ocaml.doc("<p>The ARN of the <a>PermissionSet</a> whose managed policies will be
      listed.</p>")
    @as("PermissionSetArn")
    permissionSetArn: permissionSetArn,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
    @ocaml.doc("<p>The array of the <a>AttachedManagedPolicy</a> data type object.</p>")
    @as("AttachedManagedPolicies")
    attachedManagedPolicies: option<attachedManagedPolicyList>,
  }
  @module("@aws-sdk/client-sso") @new
  external new: request => t = "ListManagedPoliciesInPermissionSetCommand"
  let make = (~permissionSetArn, ~instanceArn, ~nextToken=?, ~maxResults=?, ()) =>
    new({
      nextToken: nextToken,
      maxResults: maxResults,
      permissionSetArn: permissionSetArn,
      instanceArn: instanceArn,
    })
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module ListInstances = {
  type t
  type request = {
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
    @ocaml.doc("<p>The maximum number of results to display for the instance.</p>")
    @as("MaxResults")
    maxResults: option<maxResults>,
  }
  type response = {
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
    @ocaml.doc("<p>Lists the SSO instances that the caller has access to.</p>") @as("Instances")
    instances: option<instanceList>,
  }
  @module("@aws-sdk/client-sso") @new external new: request => t = "ListInstancesCommand"
  let make = (~nextToken=?, ~maxResults=?, ()) =>
    new({nextToken: nextToken, maxResults: maxResults})
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module ListAccountAssignments = {
  type t
  type request = {
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
    @ocaml.doc("<p>The maximum number of results to display for the assignment.</p>")
    @as("MaxResults")
    maxResults: option<maxResults>,
    @ocaml.doc("<p>The ARN of the permission set from which to list assignments.</p>")
    @as("PermissionSetArn")
    permissionSetArn: permissionSetArn,
    @ocaml.doc(
      "<p>The identifier of the Amazon Web Services account from which to list the assignments.</p>"
    )
    @as("AccountId")
    accountId: targetId,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
    @ocaml.doc(
      "<p>The list of assignments that match the input Amazon Web Services account and permission set.</p>"
    )
    @as("AccountAssignments")
    accountAssignments: option<accountAssignmentList>,
  }
  @module("@aws-sdk/client-sso") @new external new: request => t = "ListAccountAssignmentsCommand"
  let make = (~permissionSetArn, ~accountId, ~instanceArn, ~nextToken=?, ~maxResults=?, ()) =>
    new({
      nextToken: nextToken,
      maxResults: maxResults,
      permissionSetArn: permissionSetArn,
      accountId: accountId,
      instanceArn: instanceArn,
    })
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module ListAccountAssignmentDeletionStatus = {
  type t
  type request = {
    @ocaml.doc("<p>Filters results based on the passed attribute value.</p>") @as("Filter")
    filter: option<operationStatusFilter>,
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
    @ocaml.doc("<p>The maximum number of results to display for the assignment.</p>")
    @as("MaxResults")
    maxResults: option<maxResults>,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
    @ocaml.doc("<p>The status object for the account assignment deletion operation.</p>")
    @as("AccountAssignmentsDeletionStatus")
    accountAssignmentsDeletionStatus: option<accountAssignmentOperationStatusList>,
  }
  @module("@aws-sdk/client-sso") @new
  external new: request => t = "ListAccountAssignmentDeletionStatusCommand"
  let make = (~instanceArn, ~filter=?, ~nextToken=?, ~maxResults=?, ()) =>
    new({filter: filter, nextToken: nextToken, maxResults: maxResults, instanceArn: instanceArn})
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module ListAccountAssignmentCreationStatus = {
  type t
  type request = {
    @ocaml.doc("<p>Filters results based on the passed attribute value.</p>") @as("Filter")
    filter: option<operationStatusFilter>,
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
    @ocaml.doc("<p>The maximum number of results to display for the assignment.</p>")
    @as("MaxResults")
    maxResults: option<maxResults>,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {
    @ocaml.doc(
      "<p>The pagination token for the list API. Initially the value is null. Use the output of previous API calls to make subsequent calls.</p>"
    )
    @as("NextToken")
    nextToken: option<token>,
    @ocaml.doc("<p>The status object for the account assignment creation operation.</p>")
    @as("AccountAssignmentsCreationStatus")
    accountAssignmentsCreationStatus: option<accountAssignmentOperationStatusList>,
  }
  @module("@aws-sdk/client-sso") @new
  external new: request => t = "ListAccountAssignmentCreationStatusCommand"
  let make = (~instanceArn, ~filter=?, ~nextToken=?, ~maxResults=?, ()) =>
    new({filter: filter, nextToken: nextToken, maxResults: maxResults, instanceArn: instanceArn})
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module CreatePermissionSet = {
  type t
  type request = {
    @ocaml.doc("<p>The tags to attach to the new <a>PermissionSet</a>.</p>") @as("Tags")
    tags: option<tagList_>,
    @ocaml.doc("<p>Used to redirect users within the application during the federation authentication
      process.</p>")
    @as("RelayState")
    relayState: option<relayState>,
    @ocaml.doc("<p>The length of time that the application user sessions are valid in the ISO-8601
      standard.</p>")
    @as("SessionDuration")
    sessionDuration: option<duration>,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed. For more information about ARNs, see <a href=\"/general/latest/gr/aws-arns-and-namespaces.html\">Amazon Resource
Names (ARNs) and Amazon Web Services Service Namespaces</a> in the <i>Amazon Web Services General Reference</i>.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
    @ocaml.doc("<p>The description of the <a>PermissionSet</a>.</p>") @as("Description")
    description: option<permissionSetDescription>,
    @ocaml.doc("<p>The name of the <a>PermissionSet</a>.</p>") @as("Name") name: permissionSetName,
  }
  type response = {
    @ocaml.doc("<p>Defines the level of access on an Amazon Web Services account.</p>")
    @as("PermissionSet")
    permissionSet: option<permissionSet>,
  }
  @module("@aws-sdk/client-sso") @new external new: request => t = "CreatePermissionSetCommand"
  let make = (
    ~instanceArn,
    ~name,
    ~tags=?,
    ~relayState=?,
    ~sessionDuration=?,
    ~description=?,
    (),
  ) =>
    new({
      tags: tags,
      relayState: relayState,
      sessionDuration: sessionDuration,
      instanceArn: instanceArn,
      description: description,
      name: name,
    })
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module UpdateInstanceAccessControlAttributeConfiguration = {
  type t
  type request = {
    @ocaml.doc("<p>Updates the attributes for your ABAC configuration.</p>")
    @as("InstanceAccessControlAttributeConfiguration")
    instanceAccessControlAttributeConfiguration: instanceAccessControlAttributeConfiguration,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {.}
  @module("@aws-sdk/client-sso") @new
  external new: request => t = "UpdateInstanceAccessControlAttributeConfigurationCommand"
  let make = (~instanceAccessControlAttributeConfiguration, ~instanceArn, ()) =>
    new({
      instanceAccessControlAttributeConfiguration: instanceAccessControlAttributeConfiguration,
      instanceArn: instanceArn,
    })
  @send external send: (awsServiceClient, t) => Js.Promise.t<unit> = "send"
}

module DescribeInstanceAccessControlAttributeConfiguration = {
  type t
  type request = {
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {
    @ocaml.doc("<p>Gets the list of Amazon Web Services SSO identity store attributes that have been added to your ABAC
      configuration.</p>")
    @as("InstanceAccessControlAttributeConfiguration")
    instanceAccessControlAttributeConfiguration: option<
      instanceAccessControlAttributeConfiguration,
    >,
    @ocaml.doc("<p>Provides more details about the current status of the specified attribute.</p>")
    @as("StatusReason")
    statusReason: option<instanceAccessControlAttributeConfigurationStatusReason>,
    @ocaml.doc("<p>The status of the attribute configuration process.</p>") @as("Status")
    status: option<instanceAccessControlAttributeConfigurationStatus>,
  }
  @module("@aws-sdk/client-sso") @new
  external new: request => t = "DescribeInstanceAccessControlAttributeConfigurationCommand"
  let make = (~instanceArn, ()) => new({instanceArn: instanceArn})
  @send external send: (awsServiceClient, t) => Js.Promise.t<response> = "send"
}

module CreateInstanceAccessControlAttributeConfiguration = {
  type t
  type request = {
    @ocaml.doc("<p>Specifies the Amazon Web Services SSO identity store attributes to add to your ABAC configuration.
      When using an external identity provider as an identity source, you can pass attributes
      through the SAML assertion. Doing so provides an alternative to configuring attributes from
      the Amazon Web Services SSO identity store. If a SAML assertion passes any of these attributes, Amazon Web Services
      SSO will replace the attribute value with the value from the Amazon Web Services SSO identity
      store.</p>")
    @as("InstanceAccessControlAttributeConfiguration")
    instanceAccessControlAttributeConfiguration: instanceAccessControlAttributeConfiguration,
    @ocaml.doc("<p>The ARN of the SSO instance under which the operation will be executed.</p>")
    @as("InstanceArn")
    instanceArn: instanceArn,
  }
  type response = {.}
  @module("@aws-sdk/client-sso") @new
  external new: request => t = "CreateInstanceAccessControlAttributeConfigurationCommand"
  let make = (~instanceAccessControlAttributeConfiguration, ~instanceArn, ()) =>
    new({
      instanceAccessControlAttributeConfiguration: instanceAccessControlAttributeConfiguration,
      instanceArn: instanceArn,
    })
  @send external send: (awsServiceClient, t) => Js.Promise.t<unit> = "send"
}
